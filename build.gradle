plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.3'
	id "me.champeau.jmh" version "0.7.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = "21"
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.postgresql:postgresql'
	implementation 'com.google.guava:guava:33.2.1-jre'
	implementation 'org.asynchttpclient:async-http-client:3.0.0.Beta3'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.openjdk.jmh:jmh-core:1.37'
	testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
	testImplementation 'org.openjdk.jmh:jmh-core:1.37'
	testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += "--enable-preview"
}

tasks.withType(Test).configureEach {
	jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec).configureEach {
	jvmArgs += "--enable-preview"
}

targetCompatibility = JavaVersion.VERSION_21
